apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghost-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ghost
  template:
    metadata:
      labels:
        app: ghost
    spec:
      containers:
      - name: ghost
        image: ghost:latest
        ports:
        - containerPort: 2368
        env:
        - name: url
          value: http://localhost:2368
        - name: database__client
          value: "mysql"
        - name: database__connection__host
          value: "localhost"
        - name: database__connection__user
          value: "ghost"
        - name: database__connection__password
          valueFrom:
            secretKeyRef:
              name: ghost-db-secret
              key: password
        - name: database__connection__database
          value: "ghost"
        livenessProbe:
          httpGet:
            path: /health
            port: 2368
          initialDelaySeconds: 60
          periodSeconds: 30
      - name: mysql
        image: mysql:5.7
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ghost-db-secret
              key: root-password
        - name: MYSQL_USER
          value: "ghost"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ghost-db-secret
              key: password
        - name: MYSQL_DATABASE
          value: "ghost"
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ghost-service
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 2368
  selector:
    app: ghost

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: nginx
---

---
---
